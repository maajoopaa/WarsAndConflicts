@model WarsAndConflicts.Models.AccountViewModel
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Вход</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        body {
            background-color: #f0f2f5;
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0;
        }

        .login-container {
            max-width: 420px;
            width: 100%;
        }

        .login-card {
            border: none;
            border-radius: 20px;
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.05);
        }

            .login-card .card-header {
                background-color: #ffffff;
                border-bottom: none;
                text-align: center;
                padding: 24px 24px 0 24px;
            }

                .login-card .card-header h4 {
                    margin: 0;
                    font-weight: 600;
                    color: #343a40;
                }

        .btn-clean {
            background-color: #0d6efd;
            color: white;
            border-radius: 8px;
            transition: all 0.2s ease-in-out;
        }

            .btn-clean:hover {
                background-color: #0b5ed7;
            }

        .toast-notification {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1100;
            min-width: 300px;
        }

        .toast-error {
            border-left: 5px solid #dc3545;
        }

        .text-center a {
            color: #0d6efd;
            text-decoration: none;
        }

            .text-center a:hover {
                text-decoration: underline;
            }
    </style>
</head>
<body>
    <div id="notificationContainer" class="toast-notification"></div>

    <div class="login-container">
        <div class="card login-card">
            <div class="card-header">
                <h4>Авторизация</h4>
            </div>
            <div class="card-body p-4">
                <form method="post" action="@Url.Action("SignIn", "Account")">
                    <div class="mb-3">
                        <label for="username" class="form-label">Имя пользователя</label>
                        <input type="text" class="form-control" id="username" name="username" required />
                    </div>
                    <div class="mb-3">
                        <label for="password" class="form-label">Пароль</label>
                        <input type="password" class="form-control" id="password" name="password" required />
                    </div>
                    <button type="submit" class="btn btn-clean w-100 py-2">Войти</button>
                </form>
                <div class="text-center mt-3">
                    <p>Нет аккаунта? <a href="@Url.Action("SignUp", "Account")">Регистрация</a></p>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        function showErrorNotification(message) {
            const container = document.getElementById('notificationContainer');
            const toastEl = document.createElement('div');
            toastEl.className = 'toast show toast-error';
            toastEl.setAttribute('role', 'alert');
            toastEl.setAttribute('aria-live', 'assertive');
            toastEl.setAttribute('aria-atomic', 'true');

            toastEl.innerHTML = `
                        <div class="toast-header bg-white">
                            <strong class="me-auto text-danger">Ошибка</strong>
                            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Закрыть"></button>
                        </div>
                        <div class="toast-body bg-light">
                            ${message}
                        </div>
                    `;

            container.appendChild(toastEl);
            const toast = new bootstrap.Toast(toastEl);
            toast.show();

            toastEl.addEventListener('hidden.bs.toast', function () {
                toastEl.remove();
            });

            setTimeout(() => {
                toast.hide();
            }, 5000);
        }

        @if (!string.IsNullOrEmpty(Model.Error))
        {
            <text>
                    document.addEventListener('DOMContentLoaded', function() {
                        showErrorNotification('@Html.Raw(Model.Error)');
                            });
            </text>
        }
    </script>
</body>
</html>
